<?xml version="1.0"?>
<!DOCTYPE modification SYSTEM "http://www.simplemachines.org/xml/modification">

<modification xmlns="http://www.simplemachines.org/xml/modification" xmlns:smf="http://www.simplemachines.org/">
	<!-- This information needs to be the same as that in the package-info.xml. -->
	<id>WWakerFAN:AdditionalPolls</id>
	<version>1.2.2</version>
	
	<file name="$sourcedir/Display.php">
		<operation>
			<search position="replace"><![CDATA[p.question, p.voting_locked, p.hide_results, p.expire_time, p.max_votes, p.change_vote,]]></search>
		
			<add><![CDATA[p.id_poll, p.question, p.voting_locked, p.hide_results, p.expire_time, p.max_votes, p.change_vote,]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[WHERE p.id_poll = {int:id_poll}
			LIMIT 1',
			array(
				'id_poll' => $topicinfo['id_poll'],
			)]]></search>
		
			<add><![CDATA[WHERE p.id_poll = {int:id_poll} OR p.id_topic = {int:topic}
			ORDER BY p.question',
			array(
				'id_poll' => $topicinfo['id_poll'],
				'topic' => $topic,
			)]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$pollinfo = $smcFunc['db_fetch_assoc']($request);
		$smcFunc['db_free_result']($request);]]></search>
		
			<add><![CDATA[$pollinfo = array();
		while($row = $smcFunc['db_fetch_assoc']($request)) $pollinfo[] = $row;
		$smcFunc['db_free_result']($request);
		foreach($pollinfo as $poll)
		{
		]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$request = $smcFunc['db_query']('', '
			SELECT COUNT(DISTINCT id_member) AS total
			FROM {db_prefix}log_polls
			WHERE id_poll = {int:id_poll}
				AND id_member != {int:not_guest}',
			array(
				'id_poll' => $topicinfo['id_poll'],
				'not_guest' => 0,
			)
		);
		list ($pollinfo['total']) = $smcFunc['db_fetch_row']($request);
		$smcFunc['db_free_result']($request);

		// Total voters needs to include guest voters
		$pollinfo['total'] += $pollinfo['num_guest_voters'];]]></search>
			<add><![CDATA[$request = $smcFunc['db_query']('', '
			SELECT COUNT(DISTINCT id_member) AS total
			FROM {db_prefix}log_polls
			WHERE id_poll = {int:id_poll}
				AND id_member != {int:not_guest}',
			array(
				'id_poll' => $poll['id_poll'],
				'not_guest' => 0,
			)
		);
		list ($poll['total']) = $smcFunc['db_fetch_row']($request);
		$smcFunc['db_free_result']($request);

		// Total voters needs to include guest voters
		$poll['total'] += $poll['num_guest_voters'];]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA['current_member' => $user_info['id'],
				'id_poll' => $topicinfo['id_poll'],]]></search>
			<add><![CDATA['current_member' => $user_info['id'],
				'id_poll' => $poll['id_poll'],]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$pollinfo['has_voted'] = false;]]></search>
			<add><![CDATA[$poll['has_voted'] = false;]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$pollinfo['has_voted'] |= $row['voted_this'] != -1;]]></search>
			<add><![CDATA[$poll['has_voted'] |= $row['voted_this'] != -1;]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[if (!empty($_COOKIE['guest_poll_vote']) && preg_match('~^[0-9,;]+$~', $_COOKIE['guest_poll_vote']) && strpos($_COOKIE['guest_poll_vote'], ';' . $topicinfo['id_poll'] . ',') !== false)]]></search>
			<add><![CDATA[if (!empty($_COOKIE['guest_poll_vote']) && preg_match('~^[0-9,;]+$~', $_COOKIE['guest_poll_vote']) && strpos($_COOKIE['guest_poll_vote'], ';' . $poll['id_poll'] . ',') !== false)]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[if ($guestvoted[0] == $topicinfo['id_poll'])]]></search>
			<add><![CDATA[if ($guestvoted[0] == $poll['id_poll'])]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[if ($pollinfo['reset_poll'] > $guestvoted[1])]]></search>
			<add><![CDATA[if ($poll['reset_poll'] > $guestvoted[1])]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$pollinfo['has_voted'] |= $pollOptions[$choice]['voted_this'] != -1;]]></search>
			<add><![CDATA[$poll['has_voted'] |= $pollOptions[$choice]['voted_this'] != -1;]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[if ($user_info['is_guest'] && $pollinfo['guest_vote'] && allowedTo('poll_vote'))]]></search>
			<add><![CDATA[if ($user_info['is_guest'] && $poll['guest_vote'] && allowedTo('poll_vote'))]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA['id' => $topicinfo['id_poll'],
			'image' => 'normal_' . (empty($pollinfo['voting_locked']) ? 'poll' : 'locked_poll'),
			'question' => parse_bbc($pollinfo['question']),
			'total_votes' => $pollinfo['total'],
			'change_vote' => !empty($pollinfo['change_vote']),
			'is_locked' => !empty($pollinfo['voting_locked']),
			'options' => array(),
			'lock' => allowedTo('poll_lock_any') || ($context['user']['started'] && allowedTo('poll_lock_own')),
			'edit' => allowedTo('poll_edit_any') || ($context['user']['started'] && allowedTo('poll_edit_own')),
			'allowed_warning' => $pollinfo['max_votes'] > 1 ? sprintf($txt['poll_options6'], min(count($pollOptions), $pollinfo['max_votes'])) : '',
			'is_expired' => !empty($pollinfo['expire_time']) && $pollinfo['expire_time'] < time(),
			'expire_time' => !empty($pollinfo['expire_time']) ? timeformat($pollinfo['expire_time']) : 0,
			'has_voted' => !empty($pollinfo['has_voted']),
			'starter' => array(
				'id' => $pollinfo['id_member'],
				'name' => $row['poster_name'],
				'href' => $pollinfo['id_member'] == 0 ? '' : $scripturl . '?action=profile;u=' . $pollinfo['id_member'],
				'link' => $pollinfo['id_member'] == 0 ? $row['poster_name'] : '<a href="' . $scripturl . '?action=profile;u=' . $pollinfo['id_member'] . '">' . $row['poster_name'] . '</a>'
			)
		);]]></search>
			<add><![CDATA['id' => $poll['id_poll'],
			'image' => 'normal_' . (empty($poll['voting_locked']) ? 'poll' : 'locked_poll'),
			'question' => parse_bbc($poll['question']),
			'total_votes' => $poll['total'],
			'change_vote' => !empty($poll['change_vote']),
			'is_locked' => !empty($poll['voting_locked']),
			'options' => array(),
			'lock' => allowedTo('poll_lock_any') || ($context['user']['started'] && allowedTo('poll_lock_own')),
			'edit' => allowedTo('poll_edit_any') || ($context['user']['started'] && allowedTo('poll_edit_own')),
			'allowed_warning' => $poll['max_votes'] > 1 ? sprintf($txt['poll_options6'], min(count($pollOptions), $poll['max_votes'])) : '',
			'is_expired' => !empty($poll['expire_time']) && $poll['expire_time'] < time(),
			'expire_time' => !empty($poll['expire_time']) ? timeformat($poll['expire_time']) : 0,
			'has_voted' => !empty($poll['has_voted']),
			'starter' => array(
				'id' => $poll['id_member'],
				'name' => $row['poster_name'],
				'href' => $poll['id_member'] == 0 ? '' : $scripturl . '?action=profile;u=' . $poll['id_member'],
				'link' => $poll['id_member'] == 0 ? $row['poster_name'] : '<a href="' . $scripturl . '?action=profile;u=' . $poll['id_member'] . '">' . $row['poster_name'] . '</a>'
			)
		);]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$context['allow_vote'] = !$context['poll']['is_expired'] && (!$user_info['is_guest'] || ($pollinfo['guest_vote'] && allowedTo('poll_vote'))) && empty($pollinfo['voting_locked']) && allowedTo('poll_vote') && !$context['poll']['has_voted'];]]></search>
		
			<add><![CDATA[$context['poll']['allow_vote'] = !$context['poll']['is_expired'] && (!$user_info['is_guest'] || ($poll['guest_vote'] && allowedTo('poll_vote'))) && empty($poll['voting_locked']) && allowedTo('poll_vote') && !$context['poll']['has_voted'];]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$context['allow_poll_view'] = allowedTo('moderate_board') || $pollinfo['hide_results'] == 0 || ($pollinfo['hide_results'] == 1 && $context['poll']['has_voted']) || $context['poll']['is_expired'];]]></search>
		
			<add><![CDATA[$context['poll']['allow_poll_view'] = allowedTo('moderate_board') || $poll['hide_results'] == 0 || ($poll['hide_results'] == 1 && $context['poll']['has_voted']) || $context['poll']['is_expired'];]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$context['poll']['show_results'] = $context['allow_poll_view'] && (isset($_REQUEST['viewresults']) || isset($_REQUEST['viewResults']));]]></search>
		
			<add><![CDATA[$context['poll']['show_results'] = $context['poll']['allow_poll_view'] &&(isset($_REQUEST['viewresults']) || isset($_REQUEST['viewResults'])) && $poll['id_poll'] == $_REQUEST['poll'];]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$context['show_view_results_button'] = $context['allow_vote'] && $context['allow_poll_view'] && !$context['poll']['show_results'];]]></search>
		
			<add><![CDATA[$context['poll']['show_view_results_button'] = $context['poll']['allow_vote'] && $context['poll']['allow_poll_view'] && !$context['poll']['show_results'];]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$context['allow_change_vote'] = !$context['poll']['is_expired'] && !$user_info['is_guest'] && empty($pollinfo['voting_locked']) && allowedTo('poll_vote') && $context['poll']['has_voted'] && $context['poll']['change_vote'];]]></search>
		
			<add><![CDATA[$context['poll']['allow_change_vote'] = !$context['poll']['is_expired'] && !$user_info['is_guest'] && empty($poll['voting_locked']) && allowedTo('poll_vote') && $context['poll']['has_voted'] && $context['poll']['change_vote'];]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$context['allow_return_vote'] = $context['allow_vote'] && $context['poll']['show_results'];]]></search>
		
			<add><![CDATA[$context['poll']['allow_return_vote'] = $context['poll']['allow_vote'] && $context['poll']['show_results'];]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA['vote_button' => '<input type="' . ($pollinfo['max_votes'] > 1 ? 'checkbox' : 'radio') . '" name="options[]" id="options-' . $i . '" value="' . $i . '" class="input_' . ($pollinfo['max_votes'] > 1 ? 'check' : 'radio') . '" />']]></search>
		
			<add><![CDATA['vote_button' => '<input type="' . ($poll['max_votes'] > 1 ? 'checkbox' : 'radio') . '" name="options[]" id="options-' . $i . '" value="' . $i . '" class="input_' . ($poll['max_votes'] > 1 ? 'check' : 'radio') . '" />']]></add>
		</operation>
		
		<operation>
			<search position="after"><![CDATA[
	}

	// Calculate the fastest way to get the messages!]]></search>
		
			<add><![CDATA[
			$context['polls'][] = $context['poll'];
			unset($context['poll']);
		}]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$context['can_add_poll'] &= $modSettings['pollMode'] == '1' && $topicinfo['id_poll'] <= 0;]]></search>
		
			<add><![CDATA[$context['can_add_poll'] &= $modSettings['pollMode'] == '1';]]></add>
		</operation>
	</file>
	
	<file name="$sourcedir/Poll.php">
		<operation>
			<search position="before"><![CDATA[global $topic, $txt, $user_info, $smcFunc, $sourcedir, $modSettings;

]]></search>
		
			<add><![CDATA[$poll = !empty($_REQUEST['poll']) ? (int)$_REQUEST['poll'] : 0;
	
]]></add>
		</operation>
	
		<operation>
			<search position="replace"><![CDATA[FROM {db_prefix}topics AS t
			INNER JOIN {db_prefix}polls AS p ON (p.id_poll = t.id_poll)
			LEFT JOIN {db_prefix}log_polls AS lp ON (p.id_poll = lp.id_poll AND lp.id_member = {int:current_member} AND lp.id_member != {int:not_guest})
		WHERE t.id_topic = {int:current_topic}
		LIMIT 1',
		array(
			'current_member' => $user_info['id'],
			'current_topic' => $topic,
			'not_guest' => 0,
		)]]></search>
		
			<add><![CDATA[FROM {db_prefix}topics AS t
			INNER JOIN {db_prefix}polls AS p ON (p.id_topic = t.id_topic)
			LEFT JOIN {db_prefix}log_polls AS lp ON (p.id_poll = lp.id_poll AND lp.id_member = {int:current_member} AND lp.id_member != {int:not_guest})
		WHERE p.id_topic = {int:current_topic} AND (p.id_poll = {int:poll} OR p.id_poll = t.id_poll)
		ORDER BY p.id_poll DESC
		LIMIT 1',
		array(
			'current_member' => $user_info['id'],
			'current_topic' => $topic,
			'not_guest' => 0,
			'poll' => $poll,
		)]]></add>
		</operation>
		
		<operation>
			<search position="before"><![CDATA[global $topic, $user_info, $smcFunc;

	checkSession('get');
]]></search>
		
			<add><![CDATA[$poll = !empty($_REQUEST['poll']) ? (int)$_REQUEST['poll'] : 0;
	
]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[SELECT t.id_member_started, t.id_poll, p.voting_locked
		FROM {db_prefix}topics AS t
			INNER JOIN {db_prefix}polls AS p ON (p.id_poll = t.id_poll)
		WHERE t.id_topic = {int:current_topic}
		LIMIT 1',
		array(
			'current_topic' => $topic,
		)]]></search>
		
			<add><![CDATA[SELECT t.id_member_started, p.id_poll, p.voting_locked
		FROM {db_prefix}topics AS t
			INNER JOIN {db_prefix}polls AS p ON (p.id_topic = t.id_topic)
		WHERE p.id_topic = {int:current_topic} AND (p.id_poll = {int:poll} OR p.id_poll = t.id_poll)
		ORDER BY p.id_poll DESC
		LIMIT 1',
		array(
			'current_topic' => $topic,
			'poll' => $poll,
		)]]></add>
		</operation>
		
		<operation>
			<search position="before"><![CDATA[global $txt, $user_info, $context, $topic, $board, $smcFunc, $sourcedir, $scripturl;

]]></search>
		
			<add><![CDATA[$poll = !empty($_REQUEST['poll']) ? (int)$_REQUEST['poll'] : 0;
	
]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[// Check if a poll currently exists on this topic, and get the id, question and starter.
	$request = $smcFunc['db_query']('', '
		SELECT
			t.id_member_started, p.id_poll, p.question, p.hide_results, p.expire_time, p.max_votes, p.change_vote,
			m.subject, p.guest_vote, p.id_member AS poll_starter
		FROM {db_prefix}topics AS t
			INNER JOIN {db_prefix}messages AS m ON (m.id_msg = t.id_first_msg)
			LEFT JOIN {db_prefix}polls AS p ON (p.id_poll = t.id_poll)
		WHERE t.id_topic = {int:current_topic}
		LIMIT 1',
		array(
			'current_topic' => $topic,
		)
	);]]></search>
		
			<add><![CDATA[if($context['is_edit'])
	{
		// Check if a poll currently exists on this topic, and get the id, question and starter.
		$request = $smcFunc['db_query']('', '
			SELECT
				t.id_member_started, p.id_poll, p.question, p.hide_results, p.expire_time, p.max_votes, p.change_vote,
				m.subject, p.guest_vote, p.id_member AS poll_starter
			FROM {db_prefix}topics AS t
				INNER JOIN {db_prefix}messages AS m ON (m.id_msg = t.id_first_msg)
				LEFT JOIN {db_prefix}polls AS p ON (p.id_topic = t.id_topic)
			WHERE p.id_topic = {int:current_topic} AND (p.id_poll = {int:poll} OR p.id_poll = t.id_poll)
				ORDER BY p.id_poll DESC
			LIMIT 1',
			array(
				'current_topic' => $topic,
				'poll' => $poll
			)
		);
	}
	else
	{
		// Check if a poll currently exists on this topic, and get the id, question and starter.
		$request = $smcFunc['db_query']('', '
			SELECT
				t.id_member_started, p.id_poll, p.question, p.hide_results, p.expire_time, p.max_votes, p.change_vote,
				m.subject, p.guest_vote, p.id_member AS poll_starter
			FROM {db_prefix}topics AS t
				INNER JOIN {db_prefix}messages AS m ON (m.id_msg = t.id_first_msg)
				LEFT JOIN {db_prefix}polls AS p ON (p.id_poll = t.id_poll)
			WHERE t.id_topic = {int:current_topic}
			LIMIT 1',
			array(
				'current_topic' => $topic,
			)
		);
	}]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[// If we are adding a new poll - make sure that there isn't already a poll there.
	if (!$context['is_edit'] && !empty($pollinfo['id_poll']))
		fatal_lang_error('poll_already_exists');]]></search>
		
			<add><![CDATA[/* REMEMBER TO RE-ADD CODE HERE 289347 */]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[elseif ($context['is_edit'] && empty($pollinfo['id_poll']))]]></search>
		
			<add><![CDATA[if ($context['is_edit'] && empty($pollinfo['id_poll']))]]></add>
		</operation>
		
		<operation>
			<search position="before"><![CDATA[global $modSettings, $user_info, $smcFunc, $sourcedir;

]]></search>
		
			<add><![CDATA[	$poll = !empty($_REQUEST['poll']) ? (int)$_REQUEST['poll'] : 0;
	
]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[// Get the starter and the poll's ID - if it's an edit.
	$request = $smcFunc['db_query']('', '
		SELECT t.id_member_started, t.id_poll, p.id_member AS poll_starter, p.expire_time
		FROM {db_prefix}topics AS t
			LEFT JOIN {db_prefix}polls AS p ON (p.id_poll = t.id_poll)
		WHERE t.id_topic = {int:current_topic}
		LIMIT 1',
		array(
			'current_topic' => $topic,
		)
	)]]></search>
		
			<add><![CDATA[if($isEdit)
	{
		// Check if a poll currently exists on this topic, and get the id, question and starter.
		$request = $smcFunc['db_query']('', '
			SELECT
				t.id_member_started, p.id_poll, p.question, p.hide_results, p.expire_time, p.max_votes, p.change_vote,
				m.subject, p.guest_vote, p.id_member AS poll_starter
			FROM {db_prefix}topics AS t
				INNER JOIN {db_prefix}messages AS m ON (m.id_msg = t.id_first_msg)
				LEFT JOIN {db_prefix}polls AS p ON (p.id_topic = t.id_topic)
			WHERE p.id_topic = {int:current_topic} AND (p.id_poll = {int:poll} OR p.id_poll = t.id_poll)
				ORDER BY p.id_poll DESC
			LIMIT 1',
			array(
				'current_topic' => $topic,
				'poll' => $poll
			)
		);
	}
	else
	{
		// Check if a poll currently exists on this topic, and get the id, question and starter.
		$request = $smcFunc['db_query']('', '
			SELECT
				t.id_member_started
			FROM {db_prefix}topics AS t
			WHERE t.id_topic = {int:current_topic}
			LIMIT 1',
			array(
				'current_topic' => $topic,
			)
		);
	}]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[// Check their adding/editing is valid.
	if (!$isEdit && !empty($bcinfo['id_poll']))
		fatal_lang_error('poll_already_exists');]]></search>
		
			<add><![CDATA[/* REMEMBER TO RE-ADD CODE HERE 892734 */]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[elseif ($isEdit && empty($bcinfo['id_poll']))]]></search>
		
			<add><![CDATA[if ($isEdit && empty($bcinfo['id_poll']))]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$smcFunc['db_insert']('',
			'{db_prefix}polls',
			array(
				'question' => 'string-255', 'hide_results' => 'int', 'max_votes' => 'int', 'expire_time' => 'int', 'id_member' => 'int',
				'poster_name' => 'string-255', 'change_vote' => 'int', 'guest_vote' => 'int'
			),
			array(
				$_POST['question'], $_POST['poll_hide'], $_POST['poll_max_votes'], $_POST['poll_expire'], $user_info['id'],
				$user_info['username'], $_POST['poll_change_vote'], $_POST['poll_guest_vote'],
			),
			array('id_poll')
		);]]></search>
		
			<add><![CDATA[$smcFunc['db_insert']('',
			'{db_prefix}polls',
			array(
				'id_topic' => 'int', 'question' => 'string-255', 'hide_results' => 'int', 'max_votes' => 'int', 'expire_time' => 'int', 'id_member' => 'int',
				'poster_name' => 'string-255', 'change_vote' => 'int', 'guest_vote' => 'int'
			),
			array(
				$topic, $_POST['question'], $_POST['poll_hide'], $_POST['poll_max_votes'], $_POST['poll_expire'], $user_info['id'],
				$user_info['username'], $_POST['poll_change_vote'], $_POST['poll_guest_vote'],
			),
			array('id_poll')
		);]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$smcFunc['db_query']('', '
			UPDATE {db_prefix}polls
			SET question = {string:question}, change_vote = {int:change_vote},' . (allowedTo('moderate_board') ? '
				hide_results = {int:hide_results}, expire_time = {int:expire_time}, max_votes = {int:max_votes},
				guest_vote = {int:guest_vote}' : '
				hide_results = CASE WHEN expire_time = {int:expire_time_zero} AND {int:hide_results} = 2 THEN 1 ELSE {int:hide_results} END') . '
			WHERE id_poll = {int:id_poll}',
			array(
				'change_vote' => $_POST['poll_change_vote'],
				'hide_results' => $_POST['poll_hide'],
				'expire_time' => !empty($_POST['poll_expire']) ? $_POST['poll_expire'] : 0,
				'max_votes' => !empty($_POST['poll_max_votes']) ? $_POST['poll_max_votes'] : 0,
				'guest_vote' => $_POST['poll_guest_vote'],
				'expire_time_zero' => 0,
				'id_poll' => $bcinfo['id_poll'],
				'question' => $_POST['question'],
			)
		);]]></search>
		
			<add><![CDATA[$smcFunc['db_query']('', '
			UPDATE {db_prefix}polls
			SET id_topic = {int:current_topic},
				question = {string:question}, change_vote = {int:change_vote},' . (allowedTo('moderate_board') ? '
				hide_results = {int:hide_results}, expire_time = {int:expire_time}, max_votes = {int:max_votes},
				guest_vote = {int:guest_vote}' : '
				hide_results = CASE WHEN expire_time = {int:expire_time_zero} AND {int:hide_results} = 2 THEN 1 ELSE {int:hide_results} END') . '
			WHERE id_poll = {int:id_poll}',
			array(
				'current_topic' => $topic,
				'change_vote' => $_POST['poll_change_vote'],
				'hide_results' => $_POST['poll_hide'],
				'expire_time' => !empty($_POST['poll_expire']) ? $_POST['poll_expire'] : 0,
				'max_votes' => !empty($_POST['poll_max_votes']) ? $_POST['poll_max_votes'] : 0,
				'guest_vote' => $_POST['poll_guest_vote'],
				'expire_time_zero' => 0,
				'id_poll' => $bcinfo['id_poll'],
				'question' => $_POST['question'],
			)
		);]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[// Link the poll to the topic
		$smcFunc['db_query']('', '
			UPDATE {db_prefix}topics
			SET id_poll = {int:id_poll}
			WHERE id_topic = {int:current_topic}',
			array(
				'current_topic' => $topic,
				'id_poll' => $bcinfo['id_poll'],
			)
		);]]></search>
		
			<add><![CDATA[// Link the poll to the topic
		$smcFunc['db_query']('', '
			UPDATE {db_prefix}topics
			SET id_poll = {int:id_poll}
			WHERE id_topic = {int:current_topic} AND id_poll = 0',
			array(
				'current_topic' => $topic,
				'id_poll' => $bcinfo['id_poll'],
			)
		);]]></add>
		</operation>
		
		<operation>
			<search position="before"><![CDATA[global $topic, $user_info, $smcFunc;

	// Make sure the topic is not empty.]]></search>
		
			<add><![CDATA[
			$poll = !empty($_REQUEST['poll']) ? (int)$_REQUEST['poll'] : 0;
	
]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$request = $smcFunc['db_query']('', '
			SELECT t.id_member_started, p.id_member AS poll_starter
			FROM {db_prefix}topics AS t
				INNER JOIN {db_prefix}polls AS p ON (p.id_poll = t.id_poll)
			WHERE t.id_topic = {int:current_topic}
			LIMIT 1',
			array(
				'current_topic' => $topic,
			)
		);]]></search>
		
			<add><![CDATA[$request = $smcFunc['db_query']('', '
			SELECT t.id_member_started, p.id_member AS poll_starter
			FROM {db_prefix}topics AS t
				INNER JOIN {db_prefix}polls AS p ON (p.id_topic = t.id_topic)
			WHERE p.id_topic = {int:current_topic} AND (p.id_poll = {int:poll} OR p.id_poll = t.id_poll)
			LIMIT 1',
			array(
				'current_topic' => $topic,
				'poll' => $poll,
			)
		);]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$request = $smcFunc['db_query']('', '
		SELECT id_poll
		FROM {db_prefix}topics
		WHERE id_topic = {int:current_topic}
		LIMIT 1',
		array(
			'current_topic' => $topic,
		)
	);]]></search>
		
			<add><![CDATA[$request = $smcFunc['db_query']('', '
		SELECT p.id_poll
		FROM {db_prefix}topics AS t
			LEFT JOIN {db_prefix}polls AS p ON (p.id_topic = t.id_topic)
		WHERE p.id_topic = {int:current_topic} AND (p.id_poll = {int:poll} OR p.id_poll = t.id_poll)
		ORDER BY p.ID_POLL DESC
		LIMIT 1',
		array(
			'current_topic' => $topic,
			'poll' => $poll
		)
	);]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[// Finally set the topic poll ID back to 0!
	$smcFunc['db_query']('', '
		UPDATE {db_prefix}topics
		SET id_poll = {int:no_poll}
		WHERE id_topic = {int:current_topic}',
		array(
			'current_topic' => $topic,
			'no_poll' => 0,
		)
	);]]></search>
		
			<add><![CDATA[// Finally set the topic poll ID back to 0!
	$smcFunc['db_query']('', '
		UPDATE {db_prefix}topics
		SET id_poll = {int:no_poll}
		WHERE id_topic = {int:current_topic} AND id_poll = {int:id_poll}',
		array(
			'current_topic' => $topic,
			'no_poll' => 0,
			'id_poll' => $pollID,
		)
	);]]></add>
		</operation>
		
		<operation>
			<search position="after"><![CDATA[// Take the moderator back to the topic.
	redirectexit('topic=' . $topic . '.' . $_REQUEST['start']);
}

?>]]></search>
		
			<add><![CDATA[	if($smcFunc['db_affected_rows']() > 0)
	{
		$request = $smcFunc['db_query']('', '
			SELECT id_poll
			FROM {db_prefix}polls
			WHERE ID_TOPIC = {int:current_topic}
			LIMIT 1',
			array(
				'current_topic' => $topic
			)
		);			
		
		if($smcFunc['db_num_rows']($request) > 0)
		{
			list($pollID) = $smcFunc['db_fetch_row']($request);
			
			$smcFunc['db_free_result']($request);
			
			$smcFunc['db_query']('', '
				UPDATE {db_prefix}topics
				SET id_poll = {int:poll}
				WHERE ID_TOPIC = {int:current_topic}
				LIMIT 1',
				array(
					'current_topic' => $topic,
					'poll' => $pollID,
				)
			);
		}
	}
	
]]></add>
		</operation>
	</file>
	
	<file name="$sourcedir/RemoveTopic.php">
		<operation>
			<search position="replace"><![CDATA[// Remove Polls.
	$request = $smcFunc['db_query']('', '
		SELECT id_poll
		FROM {db_prefix}topics
		WHERE id_topic IN ({array_int:topics})
			AND id_poll > {int:no_poll}
		LIMIT ' . count($topics),
		array(
			'no_poll' => 0,
			'topics' => $topics,
		)
	);
]]></search>
		
			<add><![CDATA[// Remove Polls.
	$request = $smcFunc['db_query']('', '
		SELECT id_poll
		FROM {db_prefix}polls
		WHERE id_topic IN ({array_int:topics})',
		array(
			'topics' => $topics,
		)
	);]]></add>
		</operation>
	</file>
	
	<file name="$sourcedir/SplitTopics.php">
		<operation>
			<search position="replace"><![CDATA[if ($row['id_poll'] > 0)
			$polls[] = $row['id_poll'];]]></search>
		
			<add><![CDATA[if ($row['id_poll'] > 0)
		{
			$polls[] = $row['id_poll'];
			
			$request2 = $smcFunc['db_query']('', '
				SELECT id_poll
				FROM {db_prefix}polls
				WHERE id_topic = {int:id_topic} AND id_poll != {int:id_poll}',
				array(
					'id_topic' => (int)$row['id_topic'],
					'id_poll' => (int)$row['id_poll'],
				)
			);
			
			while ($row2 = $smcFunc['db_fetch_assoc']($request2)) $polls[] = $row2['id_poll'];
			$smcFunc['db_free_result']($request2);
		
		}]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[SELECT t.id_topic, t.id_poll, m.subject, p.question
				FROM {db_prefix}polls AS p
					INNER JOIN {db_prefix}topics AS t ON (t.id_poll = p.id_poll)
					INNER JOIN {db_prefix}messages AS m ON (m.id_msg = t.id_first_msg)]]></search>
		
			<add><![CDATA[SELECT t.id_topic, p.id_poll, m.subject, p.question
				FROM {db_prefix}polls AS p
					INNER JOIN {db_prefix}topics AS t ON (t.id_topic = p.id_topic)
					INNER JOIN {db_prefix}messages AS m ON (m.id_msg = t.id_first_msg)]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[$target_poll = count($polls) > 1 ? (int) $_POST['poll'] : (count($polls) == 1 ? $polls[0] : 0);
	if ($target_poll > 0 && !in_array($target_poll, $polls))
		fatal_lang_error('no_access', false);
	$deleted_polls = empty($target_poll) ? $polls : array_diff($polls, array($target_poll));]]></search>
		
			<add><![CDATA[$target_poll = array();
	if(!empty($_POST['poll']))
	{
		foreach($_POST['poll'] as $poll)
		{
			$poll = (int) $poll;
			if ($poll > 0 && !in_array($poll, $polls))
				fatal_lang_error(1, false);
			$target_poll[] = $poll;
		}
	}
	
	$deleted_polls = array_diff($polls, $target_poll);]]></add>
		</operation>

		<operation>
			<search position="after"><![CDATA[	// Grab the response prefix (like 'Re: ') in the default forum language.]]></search>
		
			<add><![CDATA[	
	foreach($target_poll as $poll)
	{
		$smcFunc['db_query'] ('', '
			UPDATE `{db_prefix}polls`
			SET `id_topic` = {int:id_topic}
			WHERE `id_poll` = {int:id_poll}',
            array(
                'id_topic' => (int)$id_topic,
				'id_poll' => (int)$poll,
            )
        );
	}
	
]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA['id_poll' => $target_poll,]]></search>
		
			<add><![CDATA['id_poll' => (empty($target_poll) ? 0 : min($target_poll)),]]></add>
		</operation>
	</file>
	
	<file name="$themedir/SplitTopics.template.php">
		<operation>
			<search position="replace"><![CDATA[<input type="radio" name="poll" value="']]></search>
		
			<add><![CDATA[<input type="checkbox" name="poll[]" value="']]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[<li>
								<input type="radio" name="poll" value="-1" class="input_radio" /> (' . $txt['merge_no_poll'] . ')
							</li>]]></search>
		
			<add><![CDATA[', /* REMEMBER TO RE-ADD CODE HERE 2309478 */']]></add>
		</operation>
	</file>
	
	<file name="$themedir/Display.template.php">
		<operation>
			<search position="before"><![CDATA[// Is this topic also a poll?
	if ($context['is_poll'])
	{]]></search>
			<add><![CDATA[
		foreach($context['polls'] as $context['poll'])
		{
			$context['allow_vote'] = $context['poll']['allow_vote'];
			$context['allow_poll_view'] = $context['poll']['allow_poll_view'];
			$context['allow_change_vote'] = $context['poll']['allow_change_vote'];]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[echo '
			</div>';
	}]]></search>
			<add><![CDATA[}
		unset($context['poll']);
		unset($context['allow_vote']);
		unset($context['allow_poll_view']);
		unset($context['allow_change_vote']);]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[id="poll"]]></search>
			<add><![CDATA[class="poll"]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[<div class="content" id="poll_options">]]></search>
			<add><![CDATA[<div class="content poll_options">]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[id="pollquestion"]]></search>
			<add><![CDATA[class="pollquestion"]]></add>
		</operation>
		
		<operation>
			<search position="after"><![CDATA[// Build the poll moderation button array.]]></search>
			<add><![CDATA[

			$context['allow_return_vote'] = $context['poll']['allow_return_vote'];
			$context['show_view_results_button'] = $context['poll']['show_view_results_button'];
			$context['allow_change_vote'] = $context['poll']['allow_change_vote'];
			
]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[id="pollmoderation"]]></search>
			<add><![CDATA[class="pollmoderation"]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA['vote' => array('test' => 'allow_return_vote', 'text' => 'poll_return_vote', 'image' => 'poll_options.gif', 'lang' => true, 'url' => $scripturl . '?topic=' . $context['current_topic'] . '.' . $context['start']),]]></search>
								  <add><![CDATA['vote' => array('test' => 'allow_return_vote', 'text' => 'poll_return_vote', 'image' => 'poll_options.gif', 'lang' => true, 'url' => $scripturl . '?topic=' . $context['current_topic'] . '.' . $context['start'] . ';poll=' . $context['poll']['id']),]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA['results' => array('test' => 'show_view_results_button', 'text' => 'poll_results', 'image' => 'poll_results.gif', 'lang' => true, 'url' => $scripturl . '?topic=' . $context['current_topic'] . '.' . $context['start'] . ';viewresults'),]]></search>
								  <add><![CDATA['results' => array('test' => 'show_view_results_button', 'text' => 'poll_results', 'image' => 'poll_results.gif', 'lang' => true, 'url' => $scripturl . '?topic=' . $context['current_topic'] . '.' . $context['start'] . ';viewresults' . ';poll=' . $context['poll']['id']),]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA['lock' => array('test' => 'allow_lock_poll', 'text' => (!$context['poll']['is_locked'] ? 'poll_lock' : 'poll_unlock'), 'image' => 'poll_lock.gif', 'lang' => true, 'url' => $scripturl . '?action=lockvoting;topic=' . $context['current_topic'] . '.' . $context['start'] . ';' . $context['session_var'] . '=' . $context['session_id']),]]></search>
			<add><![CDATA['lock' => array('test' => 'allow_lock_poll', 'text' => (!$context['poll']['is_locked'] ? 'poll_lock' : 'poll_unlock'), 'image' => 'poll_lock.gif', 'lang' => true, 'url' => $scripturl . '?action=lockvoting;topic=' . $context['current_topic'] . '.' . $context['start'] . ';poll=' . $context['poll']['id'] . ';' . $context['session_var'] . '=' . $context['session_id']),]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA['edit' => array('test' => 'allow_edit_poll', 'text' => 'poll_edit', 'image' => 'poll_edit.gif', 'lang' => true, 'url' => $scripturl . '?action=editpoll;topic=' . $context['current_topic'] . '.' . $context['start']),]]></search>
								  <add><![CDATA['edit' => array('test' => 'allow_edit_poll', 'text' => 'poll_edit', 'image' => 'poll_edit.gif', 'lang' => true, 'url' => $scripturl . '?action=editpoll;topic=' . $context['current_topic'] . '.' . $context['start'] . ';poll=' . $context['poll']['id']),]]></add>
		</operation>
		
		<operation>
			<search position="replace"><![CDATA['remove_poll' => array('test' => 'can_remove_poll', 'text' => 'poll_remove', 'image' => 'admin_remove_poll.gif', 'lang' => true, 'custom' => 'onclick="return confirm(\'' . $txt['poll_remove_warn'] . '\');"', 'url' => $scripturl . '?action=removepoll;topic=' . $context['current_topic'] . '.' . $context['start'] . ';' . $context['session_var'] . '=' . $context['session_id']),]]></search>
								  <add><![CDATA['remove_poll' => array('test' => 'can_remove_poll', 'text' => 'poll_remove', 'image' => 'admin_remove_poll.gif', 'lang' => true, 'custom' => 'onclick="return confirm(\'' . $txt['poll_remove_warn'] . '\');"', 'url' => $scripturl . '?action=removepoll;topic=' . $context['current_topic'] . '.' . $context['start'] . ';' . $context['session_var'] . '=' . $context['session_id'] . ';poll=' . $context['poll']['id']),]]></add>
		</operation>
	</file>
	
	<file name="$sourcedir/RepairBoards.php">
		<operation>
			<search position="replace"><![CDATA[(t.id_poll = p.id_poll)]]></search>
			<add><![CDATA[(t.id_topic = p.id_topic)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[AND t.id_poll IS NULL]]></search>
			<add><![CDATA[AND p.id_topic IS NULL]]></add>
		</operation>
	</file>
	
	<file name="$sourcedir/Subs-Post.php">
		<operation>
			<search position="after"><![CDATA[		// Fix the message with the topic.
		$smcFunc['db_query']('', '
			UPDATE {db_prefix}messages
			SET id_topic = {int:id_topic}
			WHERE id_msg = {int:id_msg}',
			array(
				'id_topic' => $topicOptions['id'],
				'id_msg' => $msgOptions['id'],
			)
		);]]></search>
		
			<add><![CDATA[		// Fix the poll with the topic.
		if($topicOptions['poll'] !== NULL)
			$smcFunc['db_query']('', '
				UPDATE {db_prefix}polls
				SET ID_TOPIC = {int:id_topic}
				WHERE ID_POLL = {int:poll}
				LIMIT 1',
				array(
					'id_topic' => $topicOptions['id'],
					'poll' => $topicOptions['poll'],
				)
			);
]]></add>
		</operation>
	</file>
	
	<file name="$themedir/css/index.css">
		<operation>
			<search position="replace"><![CDATA[#pollmoderation]]></search>
			<add><![CDATA[.pollmoderation]]></add>			
		</operation>	
	
		<operation>
			<search position="replace"><![CDATA[#poll_options]]></search>
			<add><![CDATA[.poll_options]]></add>			
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[#poll_options]]></search>
			<add><![CDATA[.poll_options]]></add>			
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[#poll_options]]></search>
			<add><![CDATA[.poll_options]]></add>			
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[#poll_options]]></search>
			<add><![CDATA[.poll_options]]></add>			
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[#poll_options]]></search>
			<add><![CDATA[.poll_options]]></add>			
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[#poll_options]]></search>
			<add><![CDATA[.poll_options]]></add>			
		</operation>
		
		<operation>
			<search position="replace"><![CDATA[#poll_options]]></search>
			<add><![CDATA[.poll_options]]></add>			
		</operation>
	
		<operation>
			<search position="replace"><![CDATA[#pollquestion]]></search>
			<add><![CDATA[.pollquestion]]></add>			
		</operation>
	
		<operation>
			<search position="replace"><![CDATA[#poll]]></search>
			<add><![CDATA[.poll]]></add>			
		</operation>
	
		<operation>
			<search position="replace"><![CDATA[#poll]]></search>
			<add><![CDATA[.poll]]></add>			
		</operation>
	</file>
</modification>
